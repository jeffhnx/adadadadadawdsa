--// Cache
local select = select
local pcall, getgenv, next, Vector2, mathclamp, type, mousemoverel = select(1, pcall, getgenv, next, Vector2.new, math.clamp, type, mousemoverel or (Input and Input.MouseMove))

--// Preventing Multiple Processes
pcall(function()
    getgenv().Aimbot.Functions:Exit()
end)

--// Environment
getgenv().Aimbot = {}
local Environment = getgenv().Aimbot

--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local RequiredDistance, Typing, Running, ServiceConnections = 2000, false, false, {}

--// Script Settings
Environment.Settings = {
    Enabled = true,
    TeamCheck = true, -- Enable team check
    LockPart = "Head" -- Body part to lock on
}

--// Create ESP for players
local function createESP(player)
    local highlight = Instance.new("Highlight")
    highlight.Parent = player.Character
    highlight.Adornee = player.Character

    if player.Team == LocalPlayer.Team then
        highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Green for teammates
    else
        highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for enemies
    end

    highlight.FillTransparency = 0.5
end

--// Create ESP for existing players
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer and player.Character then
        createESP(player)
    end
end

--// Create ESP for players that join the game
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        createESP(player)
    end)
end)

--// Update ESP when players respawn
Players.PlayerRemoving:Connect(function(player)
    if player.Character and player.Character:FindFirstChild("Highlight") then
        player.Character.Highlight:Destroy()
    end
end)

--// Functions
local function CancelLock()
    Environment.Locked = nil
end

local function GetClosestPlayer()
    if not Environment.Locked then
        RequiredDistance = 2000

        for _, v in next, Players:GetPlayers() do
            if v ~= LocalPlayer then
                if v.Character and v.Character:FindFirstChild(Environment.Settings.LockPart) then
                    if Environment.Settings.TeamCheck and v.Team == LocalPlayer.Team then continue end
                    
                    local Vector, OnScreen = Camera:WorldToViewportPoint(v.Character[Environment.Settings.LockPart].Position)
                    local Distance = (Vector2(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2(Vector.X, Vector.Y)).Magnitude

                    if Distance < RequiredDistance and OnScreen then
                        RequiredDistance = Distance
                        Environment.Locked = v
                    end
                end
            end
        end
    end
end

--// Main
local function Load()
    ServiceConnections.RenderSteppedConnection = RunService.RenderStepped:Connect(function()
        if Running and Environment.Settings.Enabled then
            GetClosestPlayer()

            if Environment.Locked then
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, Environment.Locked.Character[Environment.Settings.LockPart].Position)
            end
        end
    end)

    ServiceConnections.InputBeganConnection = UserInputService.InputBegan:Connect(function(Input)
        if not Typing then
            if Input.UserInputType == Enum.UserInputType.MouseButton2 then
                Running = true
            end
        end
    end)

    ServiceConnections.InputEndedConnection = UserInputService.InputEnded:Connect(function(Input)
        if not Typing then
            if Input.UserInputType == Enum.UserInputType.MouseButton2 then
                Running = false
                CancelLock()
            end
        end
    end)
end

--// Functions
Environment.Functions = {}

function Environment.Functions:Exit()
    for _, v in next, ServiceConnections do
        v:Disconnect()
    end

    getgenv().Aimbot.Functions = nil
    getgenv().Aimbot = nil
end

--// Load
Load()
